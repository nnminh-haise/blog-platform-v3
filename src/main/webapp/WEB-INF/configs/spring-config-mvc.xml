<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config />
    <mvc:annotation-driven/>

    <!-- Configure data source -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="org.postgresql.Driver"
          p:url="jdbc:postgresql://localhost:5432/blog-platform"
          p:username="postgres"
          p:password="postgres">
    </bean>

    <!-- Configure Session factory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <property name="packagesToScan" value="com.example.javaee.model"/>
    </bean>

    <!-- Configure transaction manager-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Configure view resolver-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Configure Email for login account-->
    <bean id="signInGoogleAccount" class="com.example.javaee.beans.SignInGoogleAccount">
        <property name="email" value="phuongnamtran1902@gmail.com"/>
    </bean>

    <!-- Configure Application verification with Google Service API-->
        <bean id="appConfigGoogleAccount" class="com.example.javaee.beans.AppConfigGoogleAccount">
            <property name="clientId" value="538789814527-5g9809t6hdge3qrh5jjhp3q3ab3vb9vd.apps.googleusercontent.com"/>
            <property name="clientSecret" value="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"/>
            <property name="redirectUri" value="http://localhost:8080/javaee_war_exploded/login/LoginGoogleHandler.htm"/>
        </bean>

    <!-- Configure Admin controller interceptor-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/*"/>
            <bean class="com.example.javaee.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <context:component-scan base-package="com.example.javaee.controller"/>
    <context:component-scan base-package="com.example.javaee.service"/>
    <context:component-scan base-package="com.example.javaee.repository"/>
    <context:component-scan base-package="com.example.javaee.model"/>

    <mvc:resources mapping="/resources/**" location="classpath:static"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
</beans>
